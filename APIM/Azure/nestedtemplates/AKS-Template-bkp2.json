{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string"
        },
        "kubernetesVersion": {
            "type": "string"
        },
        "dnsPrefix": {
            "type": "string"
        },
        "subnetID": {
            "type": "string"
        },
        "dockerBridgeCidr": {
            "type": "string"
        },
        "serviceCidr": {
            "type": "string"
        },
        "dnsServiceIP": {
            "type": "string"
        },
        "SPClientID": {
            "type": "securestring"
        },
        "SPClientSecret": {
            "type": "securestring"
        }
    },
    "variables": {
        "apimNodePoolName": "apimpool",
        "infraNodePoolName": "infrapool",
        "NodeOSDiskSize": 1024,
        "MaxPodsPerNodes": 30,
        "NodeOsType": "Linux",
        "RbacPermission": "[bool('true')]",
        "networkPlugin": "azure",
        "networkPolicy": "azure",
        "infraPoolSizingNodes": "Standard_DS2_v2",
        "apimPoolSizingNodes": "Standard_DS2_v2",
        "aksNumberNodes": 3
    },
    "resources": [
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2019-08-01",
            "name": "[parameters('clusterName')]",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "enableRBAC": "[variables('RbacPermission')]",
                "agentPoolProfiles": [
                    {
                        "name": "[variables('infraNodePoolName')]",
                        "count": 1,
                        "vmSize": "[variables('infraPoolSizingNodes')]",
                        "osDiskSizeGB": "[variables('NodeOSDiskSize')]",
                        "vnetSubnetID": "[parameters('subnetID')]",
                        "maxPods": "[variables('MaxPodsPerNodes')]",
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ],
                        "enableAutoScaling": false,
                        "orchestratorVersion": "[parameters('kubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "osType": "[variables('NodeOsType')]"
                    },
                    {
                        "name": "[variables('apimNodePoolName')]",
                        "count": "[variables('aksNumberNodes')]",
                        "vmSize": "[variables('apimPoolSizingNodes')]",
                        "osDiskSizeGB": "[variables('NodeOSDiskSize')]",
                        "storageProfile": "ManagedDisks",
                        "vnetSubnetID": "[parameters('subnetID')]",
                        "maxPods": "[variables('MaxPodsPerNodes')]",
                        "osType": "[variables('NodeOsType')]",
                        "orchestratorVersion": "[parameters('kubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "enableAutoScaling": false,
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ]
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "[parameters('SPClientID')]",
                    "secret": "[parameters('SPClientSecret')]"
                },
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPolicy": "[variables('networkPolicy')]",
                    "networkPlugin": "[variables('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                }
            }
        }
    ]
}