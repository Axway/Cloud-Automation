{{- if .Values.cassandra.internal }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "cassandra.name" . }}
  labels: 
    {{- include "cassandra.labels" . | nindent 4 }}
spec:
  serviceName: {{ template "cassandra.name" . }}-headless
  podManagementPolicy: {{ .Values.cassandra.podManagementPolicy }}
  replicas: {{ .Values.cassandra.replicaCount }}
  selector:
    matchLabels:
      {{- include "cassandra.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: {{ .Values.cassandra.updateStrategy }}
    {{- if (eq "Recreate" .Values.cassandra.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.cassandra.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.cassandra.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      labels:
        {{- include "cassandra.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.cassandra.podAnnotations }}
        {{- toYaml .Values.cassandra.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.cassandra.hostAliases }}
      hostAliases: {{ toYaml .Values.cassandra.hostAliases | nindent 6 }}
      {{- end }}
      {{- if .Values.cassandra.serviceAccount }}
      serviceAccount: {{ .Values.cassandra.serviceAccount }}
      {{- end }}
      {{- if .Values.cassandra.affinity }}
      {{- with .Values.cassandra.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.cassandra.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.cassandra.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.cassandra.nodeAffinityPreset.type "key" .Values.cassandra.nodeAffinityPreset.key "values" .Values.cassandra.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- with .Values.cassandra.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.cassandra.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.cassandra.priorityClassName }}
      priorityClassName: {{ .Values.cassandra.priorityClassName | quote }}
      {{- end }}
      securityContext:
{{ toYaml .Values.cassandra.podSecurityContext | indent 8 }}
{{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
      - name: {{ template "cassandra.name" . }}
        image: {{ .Values.cassandra.registry }}:{{ .Values.cassandra.buildTag }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.cassandra.containerPorts.intra }}
          name: intra-node
        - containerPort: {{ .Values.cassandra.containerPorts.tls }}
          name: tls-intra-node
        - containerPort: {{ .Values.cassandra.containerPorts.jmx }}
          name: jmx
        - containerPort: {{ .Values.cassandra.containerPorts.cql }}
          name: cql
        {{- if .Values.cassandra.cluster.enableRPC }}
        - name: thrift
          containerPort: {{ .Values.cassandra.containerPorts.thrift | default "9160" }}
        {{- end }}
        resources:
{{ toYaml .Values.cassandra.resources | indent 10 }}
        volumeMounts:
          - name: data
            mountPath: {{ .Values.cassandra.persistence.mountPath }}
          {{- if .Values.cassandra.persistence.commitStorageClass }}
          - name: commitlog
            mountPath: {{ .Values.cassandra.persistence.persistence.commitLogMountPath }}
          {{- end }}
          {{- if .Values.cassandra.persistence.initDBConfigMap }}
          - name: init-db-cm
            mountPath: /docker-entrypoint-initdb.d/configmap
          {{- end }}
          {{- if .Values.cassandra.persistence.initDBSecret }}
          - name: init-db-secret
            mountPath: /docker-entrypoint-initdb.d/secret
          {{- end }}
          {{ if .Values.cassandra.existingConfiguration }}
          - name: configurations
            mountPath: {{ .Values.persistence.mountPath }}/conf
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 10 }}
           {{- end }}

        lifecycle:
{{ toYaml .Values.cassandra.lifecycle | indent 10 }}

        env:
          - name: MAX_HEAP_SIZE
            value: 1024M
          - name: HEAP_NEWSIZE
            value: 512M
          - name: CASSANDRA_CLUSTER_NAME
            value: {{ .Values.cassandra.clusterName }}
          - name: CASSANDRA_DC
            value: "DC1-APIM"
          - name: CASSANDRA_RACK
            value: "Rack1-APIM"
          - name: CASSANDRA_AUTO_BOOTSTRAP
            value: "false"
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: GossipingPropertyFileSnitch
          - name: CASSANDRA_USER
            value: {{ .Values.cassandra.adminName }}
          - name: CASSANDRA_PASSWORD_SEEDER
            value: "yes"
          - name: CASSANDRA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: apim-password
                key: dbcass
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: {{- include "cassandra.labels" . | nindent 10 }}
        {{- if .Values.cassandra.persistence.annotations }}
        annotations: {{- toYaml .Values.cassandra.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.cassandra.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.cassandra.persistence.size | quote }}
    {{- include "common.storage.class" (dict "persistence" .Values.cassandra.persistence "global" .Values.global) | nindent 8 }}
    {{- if .Values.cassandra.persistence.commitLogMountPath }}
    - metadata:
        name: commitlog
        labels: {{- include "common.labels.matchLabels" . | nindent 10 }}
        {{- if .Values.cassandra.persistence.annotations }}
        annotations: {{- toYaml .Values.cassandra.persistence.annotations | nindent 10 }}
      {{- end }}
      spec:
        accessModes:
          {{- range .Values.cassandra.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.cassandra.persistence.commitLogsize | quote }}
      {{- include "cassandra.commitstorage.class" (dict "persistence" .Values.cassandra.persistence "global" .Values.global) | nindent 8 }}
    {{- end }}

{{- end }}
