{{- if eq .Values.mysqlAnalytics.enable true }}
{{- if eq .Values.mysqlAnalytics.external false }} 
apiVersion: batch/v1
kind: Job
metadata:
  name: db-create-mysql-apigw-{{ uuidv4 }}
  namespace: {{ .Release.Namespace | quote }}
  labels:  
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
 template:
  spec:
   containers:
    - name: dbcreate-mysql-analytics
      image: {{ .Values.mysqlAnalytics.imageName }}:{{ .Values.mysqlAnalytics.buildTag }}
      command: 
      - "sh" 
      - "-c" 
      args:
      - "SQL_COMMANDS=$(cat /tmp/mysql/analytics.sql); mysql -u$(METRICS_DB_USERNAME) -p$(METRICS_DB_PASS) $(MYSQL_DBNAME) -h $(MYSQL_HOST) -e \"${SQL_COMMANDS} \""
      env:
      - name: MYSQL_HOST
        value: {{ .Values.mysqlAnalytics.name }}
      - name: MYSQL_PORT
        value: {{ .Values.mysqlAnalytics.port | quote }}
      - name: METRICS_DB_USERNAME
        value: {{ .Values.mysqlAnalytics.adminUser }}
      - name: METRICS_DB_PASS
        valueFrom:
          secretKeyRef:
            name: apim-password
            key: dbmysqlanalytics
      - name: MYSQL_DBNAME
        value: {{ .Values.mysqlAnalytics.dbName }}
      volumeMounts:
      - name: config-volume
        mountPath: /tmp/mysql
   initContainers:
   - name: init-mysql
     image: {{ .Values.global.initImageTag }}
     command: ['sh', '-c', 'until nc -w 3 -v {{ .Values.mysqlAnalytics.name }} 3306; do echo waiting for mysql; sleep 2; done;']
   volumes:
    - name: config-volume
      configMap:
        # Provide the name of the ConfigMap containing the files you want
        # to add to the container
        name: analytics
   restartPolicy: Never
{{- end }}
{{- end }}
