{{- if ne .Values.global.platform "OPENSHIFT" }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: traffic
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.global.managedIngress }}
    {{- if eq .Values.global.platform "AZURE" }}
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/backend-protocol: https
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: http01
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}
    {{- else }}
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: http01
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    {{- end }}
spec:
  tls:
  - hosts:
    - {{ .Values.apitraffic.ingressName }}.{{ .Values.global.domainName }}
    secretName: apitraffic-ingress-cert
  rules:
  - host: {{ .Values.apitraffic.ingressName }}.{{ .Values.global.domainName }}
    http:
      paths:
      - backend:
          serviceName: {{ .Values.apitraffic.name }}
          servicePort: {{ .Values.apitraffic.portManager }}
        path: /
{{- end }}