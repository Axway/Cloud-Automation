{{ tpl (.Files.Get "conf/functions.conf") . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.apimgr.name | quote }}
  name: {{ .Values.apimgr.name | quote }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.apimgr.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.apimgr.name | quote }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.apimgr.name | quote }}
    spec:
      {{- if eq .Values.global.nodeAffinity.enable true }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - {{ .Values.global.nodeAffinity.apimName }}
      {{- end }}
      containers:
      - args:
        - /opt/Axway/apigateway/posix/bin/start-emt-instance
        env:
        - name: GW_DIR
          value: /opt/Axway/apigateway
        - name: GW_TRACE_DIR
          value: /opt/Axway/apigateway/trace/groups/topologylinks/emt-group-emt-service/trace
        - name: CASS_HOST
          value: {{ .Values.cassandra.name | quote }}
        - name: CASS_PORT
          value: {{ .Values.cassandra.portCql | quote }}
        - name: CASS_KEYSPACE
          value: {{ .Values.cassandra.keyspace }}
        - name: CASS_TKEYSPACE
          value: t_{{ .Values.cassandra.keyspace }}
        - name: CASS_USERNAME
          value: {{ .Values.cassandra.adminName }}
        - name: CASS_PASS
          valueFrom:
            secretKeyRef:
              name: apim-password
              key: dbcass
        - name: cassandraconsistency_writelevel
          value: {{ .Values.cassandra.consistency_level }}
        - name: cassandraconsistency_readlevel
          value: {{ .Values.cassandra.consistency_level }}
        - name: EMT_ANM_HOSTS
          value: {{ .Values.anm.name }}:{{ .Values.anm.trafficPort }}
        - name: EMT_TOPOLOGY_LOG_ENABLED
          value: "{{ .Values.apimgr.emt_topology_log_enabled }}"
        - name: EMT_TOPOLOGY_TTL
          value: "{{ .Values.apimgr.emt_topology_ttl }}"
        - name: EMT_HEAP_SIZE_MB
          value: "{{ .Values.apimgr.emt_heap_size_mb }}"
        - name: EMT_TRACE_LEVEL
          value: {{ .Values.apimgr.emt_trace_level }}
        - name: APIGW_LOG_TRACE_TO_FILE
          value: "{{ .Values.apimgr.logTraceToFile }}"
        - name: APIGW_LOG_TRACE_JSON_TO_STDOUT
          value: "{{ .Values.apimgr.logTraceJSONtoSTDOUT }}"
        - name: APIGW_LOG_OPENTRAFFIC_OUTPUT
          value: "{{ .Values.apimgr.logOpenTrafficOutput }}"
        {{- if eq .Values.mysqlAnalytics.enable true }}
        - name: METRICS_DB_URL
          value: jdbc:mysql://{{ .Values.mysqlAnalytics.name }}:{{ .Values.mysqlAnalytics.port }}/{{ .Values.mysqlAnalytics.dbName }}?useSSL={{ .Values.mysqlAnalytics.ssl }}
        - name: METRICS_DB_USERNAME
          value: {{ .Values.mysqlAnalytics.adminUser }}
        - name: METRICS_DB_PASS
          valueFrom:
            secretKeyRef:
              name: apim-password
              key: dbmysqlanalytics
        {{- end }}
        - name: EMT_DEPLOYMENT_ENABLED
          value: "{{ .Values.global.emtDeployment }}"
        image: {{ .Values.global.dockerRegistry.url }}/{{ .Values.apimgr.imageName }}:{{ .Values.apimgr.buildTag }}
        imagePullPolicy: {{ .Values.global.pullPolicy | quote }}
        name: {{ .Values.apimgr.name | quote }}
        ports:
        - containerPort: {{ .Values.apimgr.trafficPort }}
          protocol: TCP
        resources: {}
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: k8sprobe
              value: readiness.{{ .Values.apimgr.name }}
            path: {{ .Values.global.probe.page }}
            port: {{ .Values.apimgr.trafficPort }}
            scheme: HTTPS
          initialDelaySeconds: 50
          periodSeconds: 15
          failureThreshold: 10
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: k8sprobe
              value: liveness.{{ .Values.apimgr.name }}
            path: {{ .Values.global.probe.page }}
            port: {{ .Values.apimgr.trafficPort }}
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: {{ .Values.global.volumes.gateway.paths.logs | quote }}
          name: {{ .Values.apimgr.volumes.name | quote }}
        - mountPath: {{ .Values.global.volumes.gateway.paths.trace | quote }}
          name: {{ .Values.apimgr.volumes.name | quote }}
        - mountPath: {{ .Values.global.volumes.nodemanager.paths.events | quote }}
          name: {{ .Values.apimgr.volumes.name | quote }}
        - mountPath: {{ .Values.global.volumes.nodemanager.paths.logs | quote }}
          name: {{ .Values.apimgr.volumes.name | quote }}
        - mountPath: {{ .Values.global.volumes.nodemanager.paths.trace | quote }}
          name: {{ .Values.apimgr.volumes.name | quote }}
       {{- if eq .Values.global.jvm.nodemanager.enable true }}
        - name: nodemanager-jvmxml
          mountPath: "/opt/Axway/apigateway/conf/jvm.xml"
          subPath: jvm.xml
        {{- end }}
       {{- if eq .Values.global.jvm.gateway.enable true }}
        - name: gateway-jvmxml
          mountPath: "/opt/Axway/apigateway/groups/emt-group/emt-service/conf/jvm.xml"
          subPath: jvm.xml
        {{- end }}
        {{- if eq .Values.global.enableDynamicLicense true }}
        - name: config-license
          mountPath: "/opt/Axway/apigateway/conf/licenses/lic.lic"
          subPath: license
        {{- end }}
        {{- if eq .Values.apimgr.sso.enable true }}
        - name: service-provider
          mountPath: "/opt/Axway/apigateway/groups/emt-group/emt-service/conf/service-provider.xml"
          subPath: service-provider.xml
        - name: idp
          mountPath: "/opt/Axway/apigateway/groups/emt-group/emt-service/conf/idp.xml"
          subPath: idp.xml
        - name: sso-jks
          mountPath: "/opt/Axway/apigateway/groups/emt-group/emt-service/conf/sso.jks"
          subPath: sso.jks
        - name: truststore-jks
          mountPath: "/opt/Axway/apigateway/groups/emt-group/emt-service/conf/truststore.jks"
          subPath: truststore.jks
        {{- end }}
        {{- if eq .Values.apiportal.sso.enable true }}
        - name: service-provider-apiportal
          mountPath: "/opt/Axway/apigateway/groups/emt-group/emt-service/conf/service-provider-apiportal.xml"
          subPath: service-provider-apiportal.xml
        - name: idp-apiportal
          mountPath: "/opt/Axway/apigateway/groups/emt-group/emt-service/conf/idp-apiportal.xml"
          subPath: idp-apiportal.xml
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["sleep","90"]
      initContainers:
      - name: init-mount
        image: {{ .Values.global.initImageTag | quote }}
        command: ['sh', '-c', 'chown -R {{ .Values.global.userID }}:{{ .Values.global.userID }} {{ .Values.global.volumes.gateway.paths.logs }} {{ .Values.global.volumes.gateway.paths.trace }} {{ .Values.global.volumes.nodemanager.paths.events }} {{ .Values.global.volumes.nodemanager.paths.logs }} {{ .Values.global.volumes.nodemanager.paths.trace }}']
        volumeMounts:
        - name: {{ .Values.apimgr.volumes.name | quote }}
          mountPath: {{ .Values.global.volumes.gateway.paths.logs | quote }}
        - name: {{ .Values.apimgr.volumes.name | quote }}
          mountPath: {{ .Values.global.volumes.gateway.paths.trace | quote }}
        - name: {{ .Values.apimgr.volumes.name | quote }}
          mountPath: {{ .Values.global.volumes.nodemanager.paths.events | quote }}
        - name: {{ .Values.apimgr.volumes.name | quote }}
          mountPath: {{ .Values.global.volumes.nodemanager.paths.logs | quote }}
        - name: {{ .Values.apimgr.volumes.name | quote }}
          mountPath: {{ .Values.global.volumes.nodemanager.paths.trace | quote }}
        securityContext:
          runAsUser: 0
      - name: init-cassandra
        image: {{ .Values.global.initImageTag }}
        command: ['sh', '-c', 'until nc -w 3 -v cassandra 9042; do echo waiting for cassandra-0; sleep 2; done;']
      {{- if eq .Values.mysqlAnalytics.enable true }}
      - name: init-mysql
        image: {{ .Values.global.initImageTag }}
        command: ['sh', '-c', 'until nc -w 3 -v {{ .Values.mysqlAnalytics.name }} 3306; do echo waiting for mysql; sleep 2; done;']
      {{- end }}
      - name: init-anm
        image: {{ .Values.global.initImageTag }}
        command: ['sh', '-c', 'until nc -w 3 -v anm 8090; do echo waiting for anm; sleep 2; done;']
      imagePullSecrets:
      - name: {{ .Values.global.dockerRegistry.secret }}
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- if ne .Values.global.platform "OPENSHIFT" }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      {{- end }}
      terminationGracePeriodSeconds: 101
      volumes:
      - name: {{ .Values.apimgr.volumes.name | quote }}
        persistentVolumeClaim:
          claimName: {{ .Values.apimgr.volumes.name | quote }}
      {{- if eq .Values.global.jvm.nodemanager.enable true }}
      - name: nodemanager-jvmxml
        configMap:
          name: jvmxml
          defaultMode: 256
          items:
            - key: nodemanager-jvm
              mode: 256
              path: jvm.xml
      {{- end }}
      {{- if eq .Values.global.jvm.gateway.enable true }}
      - name: gateway-jvmxml
        configMap:
          name: jvmxml
          defaultMode: 256
          items:
            - key: gateway-jvm
              mode: 256
              path: jvm.xml
      {{- end }}
      {{- if (eq .Values.apimgr.sso.enable true) }}
      - name: service-provider
        configMap:
          name: sso-xml
          defaultMode: 256
          items:
            - key: service-provider
              mode: 256
              path: service-provider.xml
      - name: idp
        configMap:
          name: sso-xml
          defaultMode: 256
          items:
            - key: idp
              mode: 256
              path: idp.xml
      - name: sso-jks
        configMap:
          name: sso-xml
          defaultMode: 256
          items:
            - key: sso-jks
              mode: 256
              path: sso.jks
      - name: truststore-jks
        configMap:
          name: sso-xml
          defaultMode: 256
          items:
            - key: truststore-jks
              mode: 256
              path: truststore.jks
      {{- end }}
      {{- if (eq .Values.apiportal.sso.enable true) }}
      - name: service-provider-apiportal
        configMap:
          name: sso-xml
          defaultMode: 256
          items:
            - key: service-provider-apiportal
              mode: 256
              path: service-provider-apiportal.xml
      - name: idp-apiportal
        configMap:
          name: sso-xml
          defaultMode: 256
          items:
            - key: idp-apiportal
              mode: 256
              path: idp-apiportal.xml
      {{- end }}
      {{- if eq .Values.global.enableDynamicLicense true }}
      - name: config-license
        configMap:
          name: license
      {{- end }}
