{{- if eq .Values.apiportal.enabled true }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.apiportal.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    {{- if and (eq .Values.platform "AZURE") (eq .Values.managedIngress true) }}
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/backend-protocol: https
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: http01
    {{- end }}
    {{- if or (eq .Values.platform "ESX") (eq .Values.managedIngress false) }}
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: http01
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "API-Gateway-Manager-UI"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/session-cookie-change-on-failure: "true"
    {{- end }}
spec:
  tls:
  - hosts:
    - {{ .Values.apiportal.ingressName }}
    secretName: tls-secret-portal
  rules:
  - host: {{ .Values.apiportal.ingressName }}
    http:
      paths:
      - backend:
          serviceName: {{ .Values.apiportal.name }}
          servicePort: {{ .Values.apiportal.trafficPort }}
        path: /
{{- end }}
