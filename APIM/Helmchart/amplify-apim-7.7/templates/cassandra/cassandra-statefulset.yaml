{{- if eq .Values.cassandra.external false }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.cassandra.name }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ .Values.cassandra.name }}
spec:
  serviceName: {{ .Values.cassandra.name }}
  replicas: {{ .Values.cassandra.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.cassandra.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.cassandra.name }}
    spec:
      affinity:
        {{- if eq .Values.global.nodeAffinity.enable true }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - {{ .Values.global.nodeAffinity.dbName }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{ .Values.cassandra.name }}
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 1800
      containers:
      - name: {{ .Values.cassandra.name }}
        image: {{ .Values.cassandra.registry }}:{{ .Values.cassandra.buildTag }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        ports:
        - containerPort: {{ .Values.cassandra.portIntraNode }}
          name: intra-node
        - containerPort: {{ .Values.cassandra.portTlsIntraNode }}
          name: tls-intra-node
        - containerPort: {{ .Values.cassandra.portJmx }}
          name: jmx
        - containerPort: {{ .Values.cassandra.portCql }}
          name: cql
        resources:
          limits:
            cpu: "1000m"
            memory: 2Gi
          requests:
            cpu: "500m"
            memory: 1Gi
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - nodetool drain
        env:
          - name: MAX_HEAP_SIZE
            value: 1024M
          - name: HEAP_NEWSIZE
            value: 512M
          - name: CASSANDRA_CLUSTER_NAME
            value: {{ .Values.cassandra.clusterName }}
          - name: CASSANDRA_DC
            value: "DC1-APIM"
          - name: CASSANDRA_RACK
            value: "Rack1-APIM"
          - name: CASSANDRA_AUTO_BOOTSTRAP
            value: "false"
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: GossipingPropertyFileSnitch
          - name: CASSANDRA_USER
            value: {{ .Values.cassandra.adminName }}
          - name: CASSANDRA_PASSWORD_SEEDER
            value: "yes"
          - name: CASSANDRA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: apim-password
                key: dbcass
        volumeMounts:
        - name: cassandra-data
          mountPath: /var/lib/cassandra/data
          # mountPath: /cassandra_data
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes:
      - ReadWriteOnce
      {{- if eq .Values.global.platform "AZURE" }}
      storageClassName: managed-premium
      {{- end }}
      {{- if .Values.global.customStorageClass.scrwo }}
      storageClassName: {{ .Values.global.customStorageClass.scrwo }}
      {{- end }}
      resources:
        requests:
          storage: 2Gi
{{- end }}
