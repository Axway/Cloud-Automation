global:
  imagePullSecrets:
  - name: axway-demo-registry

  domainName: "8f4dee74948d48c8aae4.northeurope.aksapp.io"
  dockerRepository: "axwayproductsdemo.azurecr.io"
  imageTag: "20211130"
  imagePullPolicy: "Always"

##################################################################################################################################
#   A D M I N - N O D E M A N A G E R
##################################################################################################################################
anm:
   enabled: true
   image: "apim-anm-7.7"
   ingress:
      enabled: true
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
      #   kubernetes.io/ingress.class: azure/application-gateway
      #   appgw.ingress.kubernetes.io/backend-protocol: https
      #   cert-manager.io/cluster-issuer: letsencrypt
      #   cert-manager.io/acme-challenge-type: http01
      #   appgw.ingress.kubernetes.io/ssl-redirect: "true"
      #   appgw.ingress.kubernetes.io/appgw-ssl-certificate: "anm-certificate"
      #   appgw.ingress.kubernetes.io/connection-draining: "true"
      #   appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
        # Set this annotation only if the AKS cluster has been configured with the add-on "HTTP application routing".
        # This add-on create a public DNS zone automatically. It mustn't be used in production.
        kubernetes.io/ingress.class: addon-http-application-routing

        # Only if Cert-manager is used. The cluster-issuer letsencrypt-prod must be added as explained in prerequisites.
        cert-manager.io/cluster-issuer: letsencrypt-prod
        cert-manager.io/acme-challenge-type: http01
        
      tls:
         - hosts: 
            - anm.8f4dee74948d48c8aae4.northeurope.aksapp.io
           secretName: anm-tls-secret 


##################################################################################################################################
#   API MANAGER
##################################################################################################################################
apimgr:
   enabled: true
   image: "apim-gtw-7.7"
   imageTag: "20211130"
   ingress:
      enabled: true
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
        #kubernetes.io/ingress.class: azure/application-gateway
        #appgw.ingress.kubernetes.io/backend-protocol: https

        #appgw.ingress.kubernetes.io/ssl-redirect: "true"
        #appgw.ingress.kubernetes.io/appgw-ssl-certificate: "manager-certificate"
        #appgw.ingress.kubernetes.io/connection-draining: "true"
        #appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
        # Set this annotation only if the AKS cluster has been configured with the add-on "HTTP application routing".
        # This add-on create a public DNS zone automatically. It mustn't be used in production.
        kubernetes.io/ingress.class: addon-http-application-routing

        # The following annotations must be used only if cert-manager is deployed.
        # They specify how the issuer 
        cert-manager.io/cluster-issuer: letsencrypt
        cert-manager.io/acme-challenge-type: http01

      tls:
         - hosts: 
            - manager.8f4dee74948d48c8aae4.northeurope.aksapp.io
           secretName: manager-tls-secret 

##################################################################################################################################
#   API TRAFFIC
##################################################################################################################################
apitraffic:
   enabled: true
   image: "apim-gtw-7.7"
   imageTag: "20211130"
   ingress:
      enabled: true
      name: traffic
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
        #kubernetes.io/ingress.class: azure/application-gateway
        #appgw.ingress.kubernetes.io/backend-protocol: https

        #appgw.ingress.kubernetes.io/ssl-redirect: "true"
        #appgw.ingress.kubernetes.io/appgw-ssl-certificate: "traffic-certificate"
        #appgw.ingress.kubernetes.io/connection-draining: "true"
        #appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
        # Set this annotation only if the AKS cluster has been configured with the add-on "HTTP application routing".
        # This add-on create a public DNS zone automatically. It mustn't be used in production.
        kubernetes.io/ingress.class: addon-http-application-routing

        # The following annotations must be used only if cert-manager is deployed.
        # They specify how the issuer 
        cert-manager.io/cluster-issuer: letsencrypt
        cert-manager.io/acme-challenge-type: http01

      tls:
         - hosts: 
            - traffic.8f4dee74948d48c8aae4.northeurope.aksapp.io
           secretName: traffic-tls-secret 

##################################################################################################################################
#   API PORTAL
##################################################################################################################################
apiportal:
   enabled: true
   image: "apim-portal-7.7"
   imageTag: "20211130"
   ingress:
      enabled: true
      name: portal
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
        #kubernetes.io/ingress.class: azure/application-gateway
        #appgw.ingress.kubernetes.io/backend-protocol: https

        #appgw.ingress.kubernetes.io/ssl-redirect: "true"
        #appgw.ingress.kubernetes.io/appgw-ssl-certificate: "apiportal-certificate"
        #appgw.ingress.kubernetes.io/connection-draining: "true"
        #appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
        # Set this annotation only if the AKS cluster has been configured with the add-on "HTTP application routing".
        # This add-on create a public DNS zone automatically. It mustn't be used in production.
        kubernetes.io/ingress.class: addon-http-application-routing

        # The following annotations must be used only if cert-manager is deployed.
        # They specify how the issuer 
        cert-manager.io/cluster-issuer: letsencrypt
        cert-manager.io/acme-challenge-type: http01

      tls:
         - hosts: 
            - portal.8f4dee74948d48c8aae4.northeurope.aksapp.io
           secretName: apiportal-tls-secret 

   redis:
      enabled: true
      internal: true

##################################################################################################################################
#   INTERNAL CASSANDRA DATABASE
##################################################################################################################################
cassandra:
   internal: true

##################################################################################################################################
#   INTERNAL ANALYTICS/METRICS DATABASE
##################################################################################################################################
mysqlmetrics:
   internal: true

##################################################################################################################################
#   INTERNAL API-Portal DATABASE
##################################################################################################################################
mysqlapiportal:
   internal: true

##################################################################################################################################
#   AMPLIFY AGENTS
##################################################################################################################################

agents:
   central:
      clientId: DOSA_02ea38d..................b17df8f
      organizationId: 230.........343
      environment: my-v7-environment
      privateKey: |
         -----BEGIN PRIVATE KEY-----
         MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCy6I5t5R0qKHWR
         UN7Cgzz2raYhdZzQKWktVRvNnAVaJKrmK981nNIWqB8enooRTDVFEp7XazAZGDVN
         .....
         .........
         .....
         UHIriuIHpSr6yz1Foataxpo=
         -----END PRIVATE KEY-----
      publicKey: |
         -----BEGIN PUBLIC KEY-----
         MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsuiObeUdKih1kVDewoM8
         9q2mIXWc0ClpLVUbzZwFWiSq5ivfNZzSFqgfHp6KEUw1RRKe12swGRg1TWr5DBs/
         .....
         .........
         .....
         ClLsxTTMKk0EqOgjnNY/rlNUplgb7tnfHsEhBbtYWzQFhBQQ+sv8nK/DUljXYP9z
         GwIDAQAB
         -----END PUBLIC KEY-----
   discovery:
      enabled: false
      agentName: "2312"
      apimanager:
         username: apiadmin
         password: highly-secure
         insecureSSL: "true"
 