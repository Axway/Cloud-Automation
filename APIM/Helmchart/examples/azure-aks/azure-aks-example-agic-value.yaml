global:
  imagePullSecrets:
  - name: axway-demo-registry

  domainName: "azure.demoaxway.com"
  dockerRepository: "docker-registry.demo.axway.com/demo-public"
  imageTag: "1.1.1"
  imagePullPolicy: "Always"

##################################################################################################################################
#   A D M I N - N O D E M A N A G E R
##################################################################################################################################
anm:
   enabled: true
   image: "anm-demo-7.7-20211130"
   # Must be set only if an additional https listener has been configured on the ANM project. 
   # This methods allows to import custom certificates for external access because it isn't possible on the default topology port 8090.
   trafficPortUI: "8091"
   ingress:
      enabled: true
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
        kubernetes.io/ingress.class: azure/application-gateway
        appgw.ingress.kubernetes.io/backend-protocol: https
        appgw.ingress.kubernetes.io/ssl-redirect: "true"

        # The following annotations must be used only if cert-manager and issuer is deployed.
        cert-manager.io/cluster-issuer: letsencrypt
        cert-manager.io/acme-challenge-type: http01

        # The root CA must be imported only if certificates are signed with a private authority
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/#appgw-trusted-root-certificate
        # appgw.ingress.kubernetes.io/appgw-trusted-root-certificate: "apim-root-ca" 

      # hosts must be changed and using same value global.domainname.        
      tls:
         - hosts: 
            - anm.azure.demoaxway.com
           secretName: anm-tls-secret 

   nameOverride: anm

   config:
      emtDeploymentEnabled: true

   extraEnvs:
      - name: listenercert_anmui
        value: /opt/Axway/apigateway/certs/anm-cert.pem
      - name: listenerkey_anmui
        value: /opt/Axway/apigateway/certs/anm-key.pem
      # Let's encrypt crt file contains the full chain. for a separate root cert, please rename the cert and mount the file.
      - name: listenercacert_anmui
        value: /opt/Axway/apigateway/certs/anm-cert.pem
        #value: /opt/Axway/apigateway/certs/anm-ca.pem

   extraVolumes:
      - name: anm-ingress-cert
        secret:
          secretName: anm-tls-secret
          optional: false
          items:
   #        - key: chain.pem
   #          path: anm-ca.pem
          - key: tls.key
            path: anm-key.pem
          - key: tls.crt
            path: anm-cert.pem

   extraVolumeMounts:
      - name: anm-ingress-cert
        mountPath: /opt/Axway/apigateway/certs
        readOnly: true

   # Force ingress 
   readinessProbe:
      httpGet:
         httpHeaders:
            - name: k8sprobe
              value: readiness.anm
         path: /login
         port: 8091
         scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1

   livenessProbe:
      httpGet:
         httpHeaders:
            - name: k8sprobe
              value: liveness.anm
         path: /login
         port: 8091
         scheme: HTTPS
      initialDelaySeconds: 60
      periodSeconds: 60
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1

##################################################################################################################################
#   API MANAGER
##################################################################################################################################
apimgr:
   enabled: true
   image: "gtw-demo-int-7.7-20211130"
   imageTag: "1.1.0"
   ingress:
      enabled: true
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
        kubernetes.io/ingress.class: azure/application-gateway
        appgw.ingress.kubernetes.io/backend-protocol: https
        appgw.ingress.kubernetes.io/ssl-redirect: "true"

        # The following annotations must be used only if cert-manager and issuer is deployed.
        cert-manager.io/cluster-issuer: letsencrypt
        cert-manager.io/acme-challenge-type: http01

        # The root CA must be imported only if certificates are signed with a private authority
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/#appgw-trusted-root-certificate
        # appgw.ingress.kubernetes.io/appgw-trusted-root-certificate: "apim-root-ca" 

      # hosts must be changed and use the domainname.
      tls:
         - hosts: 
            - manager.azure.demoaxway.com
           secretName: manager-tls-secret 

   extraEnvs:
      - name: listenercert_manager
        value: /opt/Axway/apigateway/certs/manager-cert.pem
      - name: listenerkey_manager
        value: /opt/Axway/apigateway/certs/manager-key.pem
      # Let's encrypt crt file contains the full chain. for a separate root cert, please rename the cert and mount the file.
      - name: listenercacert_manager
        value: /opt/Axway/apigateway/certs/manager-cert.pem
        #value: /opt/Axway/apigateway/certs/manager-ca.pem

   extraVolumes:
      - name: manager-ingress-cert
        secret:
          secretName: manager-tls-secret
          optional: false
          items:
         #  - key: chain.pem
         #    path: manager-ca.pem
          - key: tls.key
            path: manager-key.pem
          - key: tls.crt
            path: manager-cert.pem

   extraVolumeMounts:
      - name: manager-ingress-cert
        mountPath: /opt/Axway/apigateway/certs
        readOnly: true


##################################################################################################################################
#   API TRAFFIC
##################################################################################################################################
apitraffic:
   enabled: true
   image: "gtw-demo-int-7.7-20211130"
   imageTag: "1.1.0"
   ingress:
      enabled: true
      name: traffic
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
        kubernetes.io/ingress.class: azure/application-gateway
        appgw.ingress.kubernetes.io/backend-protocol: https
        appgw.ingress.kubernetes.io/ssl-redirect: "true"

        # The following annotations must be used only if cert-manager and issuer is deployed.
        cert-manager.io/cluster-issuer: letsencrypt
        cert-manager.io/acme-challenge-type: http01

        # The root CA must be imported only if certificates are signed with a private authority
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/#appgw-trusted-root-certificate
        # appgw.ingress.kubernetes.io/appgw-trusted-root-certificate: "apim-root-ca" 

      # hosts must be changed and use the domainname.
      tls:
         - hosts: 
            - traffic.azure.demoaxway.com
           secretName: traffic-tls-secret 

   extraEnvs:
      - name: listenercert_traffic
        value: /opt/Axway/apigateway/certs/traffic-cert.pem
      - name: listenerkey_traffic
        value: /opt/Axway/apigateway/certs/traffic-key.pem
      # Let's encrypt crt file contains the full chain. for a separate root cert, please rename the cert and mount the file.
      - name: listenercacert_traffic
        value: /opt/Axway/apigateway/certs/traffic-cert.pem
        #value: /opt/Axway/apigateway/certs/traffic-ca.pem

   extraVolumes:
      - name: traffic-ingress-cert
        secret:
          secretName: traffic-tls-secret
          optional: false
          items:
         #  - key: chain.pem
         #    path: traffic-ca.pem
          - key: tls.key
            path: traffic-key.pem
          - key: tls.crt
            path: traffic-cert.pem

   extraVolumeMounts:
      - name: traffic-ingress-cert
        mountPath: /opt/Axway/apigateway/certs
        readOnly: true

   # Default value listen on the plain port (8080). The Gateway demo image has /healhcheck on port 8065 only
   readinessProbe:
      httpGet:
         httpHeaders:
         - name: k8sprobe
           value: readiness.traffic
         path: /healthcheck
         port: traffic
         scheme: HTTPS
      initialDelaySeconds: 40
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1

   livenessProbe:
      httpGet:
         path: /healthcheck
         port: traffic
         httpHeaders:
         - name: k8sprobe
           value: liveness.traffic
         scheme: HTTPS
      initialDelaySeconds: 300
      periodSeconds: 30
      timeoutSeconds: 15
      failureThreshold: 3
      successThreshold: 1

##################################################################################################################################
#   API PORTAL
##################################################################################################################################
apiportal:
   enabled: true
   image: "apim-portal-demo-7.7-20211130"
   imageTag: "1.0.0"
   ingress:
      enabled: true
      name: portal
      annotations: 
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/
        kubernetes.io/ingress.class: azure/application-gateway
        appgw.ingress.kubernetes.io/backend-protocol: https
        appgw.ingress.kubernetes.io/ssl-redirect: "true"

        # The following annotations must be used only if cert-manager is deployed.
        cert-manager.io/cluster-issuer: letsencrypt
        cert-manager.io/acme-challenge-type: http01

        # The root CA must be imported only if certificates are signed with a private authority
        # https://azure.github.io/application-gateway-kubernetes-ingress/annotations/#appgw-trusted-root-certificate
        # appgw.ingress.kubernetes.io/appgw-trusted-root-certificate: "apim-root-ca" 

      # hosts must be changed and use the domainname.
      tls:
         - hosts: 
            - portal.azure.demoaxway.com
           secretName: apiportal-tls-secret 

   config:
      master:
         name: "Master"
         host: "apimgr"
         port: 8075
      ssl:
         enabled: false
         generateCertificates: false

   redis:
      enabled: false
      internal: true

   nameOverride: "portal"

   extraEnvs:
   - name: APACHE_SSL_ON
     value: "1"

   extraVolumeMounts:
      - name: ingress-cert
        mountPath: /opt/axway/apiportal/certs/apache/
        readOnly: true
        

   extraVolumes:
      - name: ingress-cert
        secret:
          secretName: apiportal-tls-secret
          optional: false
          items:
         #  - key: chain.pem
         #    path: traffic-ca.pem
          - key: tls.key
            path: apache.key
          - key: tls.crt
            path: apache.crt

##################################################################################################################################
#   INTERNAL CASSANDRA DATABASE
##################################################################################################################################
cassandra:
   internal: true

##################################################################################################################################
#   INTERNAL ANALYTICS/METRICS DATABASE
##################################################################################################################################
mysqlmetrics:
   internal: true

##################################################################################################################################
#   INTERNAL API-Portal DATABASE
##################################################################################################################################
mysqlapiportal:
   internal: true

##################################################################################################################################
#   PVCs
##################################################################################################################################
pvcs:
   # Events is used by ANM, APIMGR and APITRAFFIC
   events:
      # If disabled an emptyDir volume is used instead
      # Useful if you stream log information to an external logging system
      enabled: true
      eventsVolumeClaim:
         accessModes: [ "ReadWriteMany" ]
         storageClassName: azurefile-premium
         resources:
            requests:
               storage: 10Gi
         #volumeName: apim-events-pv

   opentraffic:
      enabled: false
   trace:
      enabled: false

##################################################################################################################################
#   AMPLIFY AGENTS
##################################################################################################################################

agents:
   central:
      clientId: DOSA_02ea38d..................b17df8f
      organizationId: 230.........343
      environment: my-v7-environment
      privateKey: |
         -----BEGIN PRIVATE KEY-----
         MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCy6I5t5R0qKHWR
         UN7Cgzz2raYhdZzQKWktVRvNnAVaJKrmK981nNIWqB8enooRTDVFEp7XazAZGDVN
         .....
         .........
         .....
         UHIriuIHpSr6yz1Foataxpo=
         -----END PRIVATE KEY-----
      publicKey: |
         -----BEGIN PUBLIC KEY-----
         MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsuiObeUdKih1kVDewoM8
         9q2mIXWc0ClpLVUbzZwFWiSq5ivfNZzSFqgfHp6KEUw1RRKe12swGRg1TWr5DBs/
         .....
         .........
         .....
         ClLsxTTMKk0EqOgjnNY/rlNUplgb7tnfHsEhBbtYWzQFhBQQ+sv8nK/DUljXYP9z
         GwIDAQAB
         -----END PUBLIC KEY-----
   discovery:
      enabled: false
      agentName: "2312"
      apimanager:
         username: apiadmin
         password: highly-secure
         insecureSSL: "true"
 