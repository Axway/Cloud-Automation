global:

  domainName: "axway-apim-on-gke.com"
  dockerRepository: "ghcr.io/axway"
  imageTag: "20220830-1.0.0"
  acceptGeneralConditions: "yes"

##################################################################################################################################
#   A D M I N - N O D E M A N A G E R
##################################################################################################################################
anm:
  enabled: true
  image: "anm-demo-7.7"
  ingress:
    enabled: true
    annotations:
      # If you are using Google-Managed certificates, make sure the state of your certificate is active, otherwise the Load-Balancer
      # communication fails
      networking.gke.io/managed-certificates: anm-managed-certificate
      # Disabled HTTP as it leads to an additional Public-IP causing the following error later:
      # Error syncing to GCP: error running load balancer syncing routine: loadbalancer 1esc4l6d-apim-axway-elk-apim4elastic-kibana-1ss2c0fg does not exist: googleapi: Error 403: QUOTA_EXCEEDED - Quota 'IN_USE_ADDRESSES' exceeded. Limit: 8.0 globally. 
      kubernetes.io/ingress.allow-http: "false"
      # If the class annotation is not specified it defaults to "gce".
      # If you use the standard Ingress Controller class gce, you get a separate Load-Balancers for each service. 
      # Alternatively, you can also use NGINX. 
      # See: https://cloud.google.com/community/tutorials/nginx-ingress-gke
      kubernetes.io/ingress.class: "gce"
  service: 
    annotations:
      # Required to switch the Backend to HTTPS
      # See GCloud --> Network services --> Load-Balancing --> Backend --> Protocol
      cloud.google.com/app-protocols: '{"http":"HTTPS"}'
      # Use the special healthcheck for Admin-Node-Manager. See GCloud --> Compute engine --> Health checks
      cloud.google.com/backend-config: '{"default": "anm-backend-config"}'
  
  backendConfig: 
    healthCheck:
      checkIntervalSec: 15
      port: 8090
      type: HTTPS
      requestPath: /login/

  config: 
    emtTraceLevel: INFO

##################################################################################################################################
#   API MANAGER
##################################################################################################################################    

apimgr:
  enabled: true
  image: "gtw-demo-7.7"
  imageTag: "20220830-1.0.0"
  ingress:
    enabled: true
    annotations:
      # If you are using Google-Managed certificates, make sure the state of your certificate is active, otherwise the Load-Balancer
      # communication fails
      networking.gke.io/managed-certificates: manager-managed-certificate
      # Disabled HTTP as it leads to an additional Public-IP causing the following error later:
      # Error syncing to GCP: error running load balancer syncing routine: loadbalancer 1esc4l6d-apim-axway-elk-apim4elastic-kibana-1ss2c0fg does not exist: googleapi: Error 403: QUOTA_EXCEEDED - Quota 'IN_USE_ADDRESSES' exceeded. Limit: 8.0 globally. 
      kubernetes.io/ingress.allow-http: "false"
      # If the class annotation is not specified it defaults to "gce".
      # If you use the standard Ingress Controller class gce, you get a separate Load-Balancers for each service. 
      # Alternatively, you can also use NGINX. 
      # See: https://cloud.google.com/community/tutorials/nginx-ingress-gke
      kubernetes.io/ingress.class: "gce"
  service: 
    annotations:
      # Required to switch the Backend to HTTPS
      # See GCloud --> Network services --> Load-Balancing --> Backend --> Protocol
      cloud.google.com/app-protocols: '{"manager":"HTTPS"}'
      # Use the special healthcheck for the API-Manager. See GCloud --> Compute engine --> Health checks
      cloud.google.com/backend-config: '{"default": "apimgr-backend-config"}'

##################################################################################################################################
#   API TRAFFIC
##################################################################################################################################

apitraffic:
  enabled: true
  image: "gtw-demo-7.7"
  imageTag: "20220830-1.0.0"
  ingress:
    enabled: true
    annotations:
      # If you are using Google-Managed certificates, make sure the state of your certificate is active, otherwise the Load-Balancer
      # communication fails
      networking.gke.io/managed-certificates: apitraffic-managed-certificate
      # Disabled HTTP as it leads to an additional Public-IP causing the following error later:
      # Error syncing to GCP: error running load balancer syncing routine: loadbalancer 1esc4l6d-apim-axway-elk-apim4elastic-kibana-1ss2c0fg does not exist: googleapi: Error 403: QUOTA_EXCEEDED - Quota 'IN_USE_ADDRESSES' exceeded. Limit: 8.0 globally. 
      kubernetes.io/ingress.allow-http: "false"
      # If the class annotation is not specified it defaults to "gce".
      # If you use the standard Ingress Controller class gce, you get a separate Load-Balancers for each service. 
      # Alternatively, you can also use NGINX. 
      # See: https://cloud.google.com/community/tutorials/nginx-ingress-gke
      kubernetes.io/ingress.class: "gce"
  service: 
    annotations:
      # Tells GCloud for each named service the protocol to use
      # See GCloud --> Network services --> Load-Balancing --> Backend --> Protocol
      cloud.google.com/app-protocols: '{"traffic": "HTTPS", "oauth": "HTTPS", "tls": "HTTPS", "plain":"HTTP"}'
      # Use the special healthcheck for API-Traffic. See GCloud --> Compute engine --> Health checks
      cloud.google.com/backend-config: '{"default": "apitraffic-backend-config"}'

  backendConfig: 
    healthCheck:
      checkIntervalSec: 15
      port: 8080
      type: HTTP
      requestPath: /healthcheck

  # If you want to include the Amplify agent or Filebeat for Elasticsearch integration as a side-car. 
  # Make sure that you use the latest images.
  # extraContainers:
  #   - name: filebeat
  #     image: docker.elastic.co/beats/filebeat:7.16.3
  #     envFrom:
  #       - configMapRef:
  #           name: axway-elk-apim4elastic-filebeat-env-config
  #       - secretRef:
  #           name: axway-elk-apim4elastic-filebeat-secret
  #     volumeMounts:
  #       - name: filebeat-config
  #         mountPath: /usr/share/filebeat/filebeat.yml
  #         subPath: filebeat.yml
  #       - name: certificates
  #         mountPath: /usr/share/filebeat/config/certificates
  #       - name: opentraffic
  #         mountPath: /var/opentraffic
  #       - name: trace
  #         mountPath: /var/trace/
  #       - name: events
  #         mountPath: /var/events/
  #       - name: audit
  #         mountPath: /var/audit/
  #   - name: traceability
  #     image: axway.jfrog.io/ampc-public-docker-release/agent/v7-traceability-agent:1.1.11
  #     envFrom:
  #       - configMapRef:
  #           name: axway-apim-traceability-config
  #       - secretRef:
  #           name: axway-apim-amplify-agents-secret
  #     volumeMounts:
  #       - name: agents-secret
  #         mountPath: /opt/keys/private_key.pem
  #         subPath: private_key.pem
  #       - name: agents-secret
  #         mountPath: /opt/keys/public_key.pem
  #         subPath: public_key.pem
  #       - name: opentraffic
  #         mountPath: /opentraffic
  #       - name: events
  #         mountPath: /events/

  # extraVolumes:
  #   - name: filebeat-config
  #     configMap:
  #       name: axway-elk-apim4elastic-filebeat-config
  #   - name: certificates
  #     secret:
  #       secretName: axway-elk-apim4elastic-certificates
  #   - name: agents-secret
  #     secret:
  #       secretName: axway-apim-amplify-agents-secret

##################################################################################################################################
#   API-Portal
##################################################################################################################################
apiportal:
  enabled: true
  image: "portal-demo-7.7"
  imageTag: "20220830-1.0.0"
  ingress:
    enabled: true
    # Using portal instead of apiportal as the ingress resource name
    name: portal
    annotations:
      # If you are using Google-Managed certificates, make sure the state of your certificate is active, otherwise the Load-Balancer
      # communication fails
      networking.gke.io/managed-certificates: apiportal-managed-certificate
      # Disabled HTTP as it leads to an additional Public-IP causing the following error later:
      # Error syncing to GCP: error running load balancer syncing routine: loadbalancer 1esc4l6d-apim-axway-elk-apim4elastic-kibana-1ss2c0fg does not exist: googleapi: Error 403: QUOTA_EXCEEDED - Quota 'IN_USE_ADDRESSES' exceeded. Limit: 8.0 globally. 
      kubernetes.io/ingress.allow-http: "false"
      # If the class annotation is not specified it defaults to "gce".
      # If you use the standard Ingress Controller class gce, you get a separate Load-Balancers for each service. 
      # Alternatively, you can also use NGINX. 
      # See: https://cloud.google.com/community/tutorials/nginx-ingress-gke
      kubernetes.io/ingress.class: "gce"
  service: 
    annotations:
      # Required to switch the Backend to HTTPS
      # See GCloud --> Network services --> Load-Balancing --> Backend --> Protocol
      cloud.google.com/app-protocols: '{"http":"HTTPS"}'

##################################################################################################################################
#   AMPLIFY AGENTS
##################################################################################################################################
agents:
   discovery:
      enabled: false

##################################################################################################################################
#   PVCs
##################################################################################################################################

# Disabling persistence and using emptyDir{} as logs are supposed to be streamed externally anyway
pvcs:
   events:
      enabled: false

   opentraffic:
      enabled: false

   trace:
      enabled: false

   audit:
      enabled: false